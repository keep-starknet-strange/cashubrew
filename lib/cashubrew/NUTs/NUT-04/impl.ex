defmodule Cashubrew.Nuts.Nut04.Impl do
  @moduledoc """
  Implementation and structs of the NUT-04
  """
  alias Cashubrew.Lightning.LightningNetworkService
  alias Cashubrew.Schema

  def create_mint_quote(amount, unit) do
    repo = Application.get_env(:cashubrew, :repo)

    {payment_request, _payment_hash} = LightningNetworkService.create_invoice!(amount, unit)

    # Note: quote is a unique and random id generated by the mint to internally look up the payment state.
    # quote MUST remain a secret between user and mint and MUST NOT be derivable from the payment request.
    # A third party who knows the quote ID can front-run and steal the tokens that this operation mints.
    # 
    # For more simplicity it is used as the database ID for both the items in PendingInvoice and the MintQuote tables.
    quote_id = Ecto.UUID.bingenerate()

    # The pending invoice is the same
    Schema.PendingInvoice.create!(repo, %{
      id: quote_id,
      amount: amount,
      payment_request: payment_request
    })

    # 1 hour expiry
    expiry = :os.system_time(:second) + 3600

    Schema.MintQuote.create!(repo, %{
      id: quote_id,
      payment_request: payment_request,
      expiry: expiry,
      paid: false
    })

    %{quote_id: quote_id, request: payment_request, expiry: expiry}
  end
end
